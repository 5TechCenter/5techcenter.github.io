{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.bc57c705601967479f51.hot-update.js","sources":["webpack:///./components/Web/Header.js"],"sourcesContent":["import { useTranslation } from 'react-i18next';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { hexToRgba } from '../../src/utils';\r\n\r\nimport Link from './Link';\r\nimport MiniDrawer from './MiniDrawer';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    backgroundColor: hexToRgba(theme.palette.primary.main, 0.85),\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  titleLink: {\r\n    textDecoration: 'none !important',\r\n  },\r\n  title: {\r\n    color: theme.palette.background.paper,\r\n    backgroundColor: theme.palette.text.primary,\r\n    padding: '4px 10px',\r\n    fontWeight: 700,\r\n    borderRadius: 4,\r\n  },\r\n  menuButton: {\r\n    marginRight: 37,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation('app');\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Link href=\"/\" className={classes.titleLink}>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              {t('name')}\r\n            </Typography>\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <MiniDrawer\r\n        drawerWidth={drawerWidth}\r\n        open={open}\r\n        handleDrawerClose={handleDrawerClose}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}
{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.1aa4a02cc6c6dd643d6a.hot-update.js","sources":["webpack:///./components/Web/MiniDrawer.js","webpack:///./node_modules/@material-ui/icons/Home.js"],"sourcesContent":["import { useTranslation } from 'react-i18next';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nimport Link from './Link';\r\n\r\nimport { toolbarStyle } from './styles';\r\n\r\nconst LIST_ITEMS_1 = [\r\n  {\r\n    Icon: () => <GroupAddIcon />,\r\n    textKey: 'screens:socialLinks.title',\r\n    href: '/social-links',\r\n  },\r\n];\r\n\r\nconst LIST_ITEMS_2 = [\r\n  {\r\n    Icon: () => <HomeIcon />,\r\n    textKey: 'screens:socialLinks.title',\r\n    href: '/',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  ...toolbarStyle(theme),\r\n\r\n  drawer: {\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: (props) => ({\r\n    width: props.drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  }),\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function MiniDrawer(props) {\r\n  const { drawerWidth, open, handleDrawerClose } = props;\r\n  const classes = useStyles({ drawerWidth });\r\n  const theme = useTheme();\r\n  const { t } = useTranslation('screens');\r\n\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      className={clsx(classes.drawer, {\r\n        [classes.drawerOpen]: open,\r\n        [classes.drawerClose]: !open,\r\n      })}\r\n      classes={{\r\n        paper: clsx({\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        }),\r\n      }}\r\n    >\r\n      <div className={classes.toolbar}>\r\n        <IconButton onClick={handleDrawerClose}>\r\n          {theme.direction === 'rtl' ? (\r\n            <ChevronRightIcon />\r\n          ) : (\r\n            <ChevronLeftIcon />\r\n          )}\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n      <List>\r\n        {LIST_ITEMS_1.map((item) => (\r\n          <Link href={item.href} key={item.textKey}>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <item.Icon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={item.textKey} />\r\n            </ListItem>\r\n          </Link>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {LIST_ITEMS_2.map((item) => (\r\n          <ListItem button key={item.textKey}>\r\n            <ListItemIcon>\r\n              <item.Icon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={item.textKey} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\"\n}), 'Home');\n\nexports.default = _default;"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;A","sourceRoot":""}
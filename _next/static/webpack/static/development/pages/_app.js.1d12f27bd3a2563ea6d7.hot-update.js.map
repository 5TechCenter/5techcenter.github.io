{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.1d12f27bd3a2563ea6d7.hot-update.js","sources":["webpack:///./components/Web/Layout.js","webpack:///./pages/_app.js"],"sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\n\r\nimport ScrollTop from './ScrollTop';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: { display: 'flex' },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function Layout(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Header />\r\n\r\n      <main className={classes.content}>\r\n        <div id=\"back-to-top-anchor\" className={classes.toolbar} />\r\n\r\n        <Container>\r\n          <Box my={3}>{props.children}</Box>\r\n        </Container>\r\n        <Footer />\r\n\r\n        <ScrollTop {...props}>\r\n          <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\r\n            <KeyboardArrowUpIcon />\r\n          </Fab>\r\n        </ScrollTop>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","// ./pages/_app.js\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport App from 'next/app';\r\nimport Head from 'next/head';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport theme from '../src/theme';\r\nimport '../src/apis/i18n';\r\n\r\nimport Web from '../components/Web';\r\n\r\nclass MyApp extends App {\r\n  componentDidMount() {\r\n    // Remove the server-side injected CSS.\r\n    const jssStyles = document.querySelector('#jss-server-side');\r\n    if (jssStyles) {\r\n      jssStyles.parentElement.removeChild(jssStyles);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { Component, pageProps, t } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Head>\r\n          <title>{t('name')}</title>\r\n          <meta name=\"description\" content={t('description')} />\r\n          <meta\r\n            name=\"viewport\"\r\n            content=\"minimum-scale=1, initial-scale=1, width=device-width\"\r\n          />\r\n          <link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.ico\" />\r\n        </Head>\r\n        <ThemeProvider theme={theme}>\r\n          <Web.Layout>\r\n            <Component {...pageProps} />\r\n          </Web.Layout>\r\n        </ThemeProvider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation('app')(MyApp);\r\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}
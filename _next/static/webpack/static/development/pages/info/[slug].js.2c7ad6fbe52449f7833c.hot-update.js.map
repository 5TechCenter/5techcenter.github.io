{"version":3,"file":"static/webpack/static\\development\\pages\\info\\[slug].js.2c7ad6fbe52449f7833c.hot-update.js","sources":["webpack:///./components/Web/Pages/Post.js"],"sourcesContent":["import Head from 'next/head';\r\nimport Error from 'next/error';\r\nimport { withRouter } from 'next/router';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport { Card, Divider, Text } from 'react-native-elements';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { documentToPlainTextString } from '@contentful/rich-text-plain-text-renderer';\r\nimport path from 'path';\r\nimport client from '../../../src/apis/web/contentfulClient';\r\nimport { trimDescription, getContentTypeByPostType } from '../../../src/utils';\r\nimport ContentfulRichText from '../../../src/utils/contentful/ContentfulRichText';\r\n\r\nimport Styles from '../../../constants/Styles';\r\nimport Colors from '../../../constants/Colors';\r\n\r\nconst Post = ({ item }) => {\r\n  if (!item) return <Error statusCode={404} />;\r\n\r\n  const { t } = useTranslation(['post', 'app']);\r\n  const created = new Date(item.sys.createdAt).toDateString();\r\n  const updated = new Date(item.sys.updatedAt).toDateString();\r\n  const { title, body } = item.fields;\r\n\r\n  return (\r\n    <View style={Styles.container}>\r\n      <Head>\r\n        <title>\r\n          {title} - {t('app:name')}\r\n        </title>\r\n        <meta\r\n          name=\"description\"\r\n          content={trimDescription(documentToPlainTextString(body))}\r\n        />\r\n      </Head>\r\n\r\n      <Card\r\n        title={\r\n          <View style={styles.titleView}>\r\n            <Text h1 style={styles.title}>\r\n              {title}\r\n            </Text>\r\n            <View style={styles.dates}>\r\n              <Text style={styles.date}>\r\n                {t('post:created')}\r\n                {created}\r\n              </Text>\r\n              <Text style={styles.dateSeparator}>|</Text>\r\n              <Text style={styles.date}>\r\n                {t('post:updated')}\r\n                {updated}\r\n              </Text>\r\n            </View>\r\n            <Divider />\r\n          </View>\r\n        }\r\n        containerStyle={styles.cardContainer}\r\n      >\r\n        <View style={styles.bodyView}>{ContentfulRichText(body)}</View>\r\n      </Card>\r\n    </View>\r\n  );\r\n};\r\n\r\nPost.getInitialProps = async function ({ query, pathname }) {\r\n  const { slug } = query;\r\n  const postType = path.basename(path.dirname(pathname));\r\n\r\n  const entries = await client.getEntries({\r\n    content_type: getContentTypeByPostType(postType),\r\n    'fields.slug[in]': slug,\r\n  });\r\n\r\n  return { item: entries.items[0] };\r\n};\r\n\r\nexport default withRouter(Post);\r\n\r\nconst styles = StyleSheet.create({\r\n  cardContainer: { margin: 0 },\r\n  titleView: {\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 10,\r\n  },\r\n  title: {\r\n    fontWeight: '700',\r\n    lineHeight: 35,\r\n    paddingBottom: 15,\r\n  },\r\n  dates: { flexDirection: 'row', paddingBottom: 20 },\r\n  date: { color: Colors.secondaryText },\r\n  dateSeparator: { paddingHorizontal: 8 },\r\n  bodyView: { marginVertical: 10 },\r\n});\r\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}